/**
 * I've written a basic program to generate a script that will automatically configure routing in a Cisco router. It
 * reads an input file which contains the directly connected interfaces of a router.

 e.g. of the file. It can be generated by writing show ip route connected in the router itself.

    C   192.168.1.0/30  is directly connected, FastEthernet0/0
    C   192.168.1.8/30  is directly connected, FastEthernet0/1
    C   192.168.2.0/24  is directly connected, Ethernet0/3/0

 It will generate a command that includes all the ports and save it as a file.

 the output would be something like this (depending on protocol)

    enable
    conf t
    router ospf 1
    network 192.168.1.0 0.0.0.3 area 51
    network 192.168.1.8 0.0.0.3 area 51
    network 192.168.2.0 0.0.0.255 area 51
    end

 The improvements that I thought are

 1. connect the router and program in a pipeline of sort, maybe use a scripting language? Thus, automate the program for
 each router without having the need to store the router's output as a file.

 2. Somehow similar to the first idea. Execute the output directly and bypass the file writing process.
 */
package q165402;
